name: CI

# 1
# Controls when the workflow will run
on:
  # Triggers the workflow on push events but only for the master branch
  push:
    branches: [main]

  # Allows you to run this workflow manually from the Actions tab
  workflow_dispatch:
    inputs:
      version:
        description: "Image version"
        required: true
#2
env:
  REGISTRY: ghcr.io
  IMAGE_NAME: react-app

#3
jobs:
  build_and_push:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Declare some variables
        id: vars
        shell: bash
        run: |
          echo "##[set-output name=branch;]$(echo ${GITHUB_REF#refs/heads/})"
          echo "::set-output name=sha_short::$(git rev-parse --short HEAD)"

      - name: Check some variables
        run: |
          echo "Branch: ${{ steps.vars.outputs.branch }}"
          echo "Sha: ${{ steps.vars.outputs.sha_short }}"

      - name: Set up QEMU
        uses: docker/setup-qemu-action@v2
        # https://github.com/docker/setup-qemu-action
        # Add support for more platforms with QEMU (optional)

      - name: Set up Docker Buildx
        id: buildx
        uses: docker/setup-buildx-action@v2

      - name: Log in to the Container registry
        uses: docker/login-action@v2
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Build and push
        uses: docker/build-push-action@v2
        with:
          # relative path to the place where source code with Dockerfile is located
          context: .
          # platforms: linux/amd64,linux/arm64
          # build on feature branches, push only on main branch
          push: ${{ github.ref == 'refs/heads/main' }}
          # Note: tags has to be all lower-case
          tags: ${{env.REGISTRY}}/horsty80/${{env.IMAGE_NAME}}:${{ steps.vars.outputs.branch }}.${{ steps.vars.outputs.sha_short }}

  deploy:
    runs-on: ubuntu-latest
    needs: build_and_push

    steps:
      - name: Deploy to Digital Ocean droplet via SSH action
        uses: appleboy/ssh-action@v0.1.6
        with:
          host: ${{ secrets.HOST }}
          username: ${{ secrets.USERNAME }}
          key: ${{ secrets.SSHKEY }}
          envs: IMAGE_NAME,REGISTRY,{{ secrets.DIGITALOCEAN_ACCESS_TOKEN }},${{ steps.vars.outputs.branch }},${{ steps.vars.outputs.sha_short }}
          script: |
            # Login to registry
            # No need the repository is public
            # docker login -u ${{ secrets.DIGITALOCEAN_ACCESS_TOKEN }} -p ${{ secrets.DIGITALOCEAN_ACCESS_TOKEN }} registry.digitalocean.com
            # Stop running container
            docker stop ${{env.IMAGE_NAME}}
            # Remove old container
            docker rm ${{env.IMAGE_NAME}}
            # Run a new container from a new image
            docker run -d \
            --restart always \
            -p 8000:8000 \
            --name ${{env.IMAGE_NAME}} \
            ${{env.REGISTRY}}/horsty80/${{env.IMAGE_NAME}}:${{ steps.vars.outputs.branch }}.${{ steps.vars.outputs.sha_short }}
